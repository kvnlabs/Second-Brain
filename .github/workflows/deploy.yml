name: Deploy to Github Pages
on:
  push:
    paths-ignore:
      - "images/**"
      - "LICENSE"
      - "README.md"
    branches:
      - master  # Trigger deploy on 'master' branch
      - gh-pages  # Trigger deploy on 'gh-pages' branch
  workflow_dispatch:
    inputs:
      hugoVersion:
        description: "Hugo Version"
        required: false
        default: "0.125.7"

concurrency:
  group: "pages"
  cancel-in-progress: true

defaults:
  run:
    shell: bash

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    env:
      HUGO_VERSION: ${{ github.event.inputs.hugoVersion || '0.125.7' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: master
          submodules: recursive
      
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v4
      
      - name: Install Hugo CLI
        run: |
          wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_${HUGO_VERSION}_linux-amd64.deb \
          && sudo dpkg -i ${{ runner.temp }}/hugo.deb
      
      - name: Build with Hugo
        run: |
          hugo --buildDrafts --gc --baseURL ${{ steps.pages.outputs.base_url }}
          tar -czf public.tar.gz ./public  # Compress the output directory into a tar.gz file
      
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          path: public.tar.gz  # Upload the compressed tar.gz file
          name: github-pages  # Match the artifact name

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: github-pages  # This should match the artifact name from the upload step
      
      - name: Extract artifact
        run: |
          ls -alh  # List the contents to verify the artifact is downloaded
          tar -xzf public.tar.gz  # Extract the compressed tar.gz artifact

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        with:
          artifact_name: github-pages  # Match the artifact name from the upload step
